{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["html2pdf","require","newLine","md","typographer","use","demo","App","state","input","result","render","min","menu","modal","handleChange","bind","handleReset","handleMinimize","handleMenu","handlePDF","e","r","target","value","this","setState","name","className","id","style","display","aria-label","onClick","onChange","autoFocus","margin","dangerouslySetInnerHTML","__html","src","href","Component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7c47b351.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\n\nimport '98.css';\nimport './App.css';\n\nvar html2pdf = require('html2pdf.js')\nvar newLine = require('markdown-it-preserve-newline');\nvar md = require('markdown-it')({\n  typographer: true,\n}).use(newLine)\n\nlet demo = \"# h1 Heading 8-)\\r\\n## h2 Heading\\r\\n### h3 Heading\\r\\n#### h4 Heading\\r\\n##### h5 Heading\\r\\n###### h6 Heading\\r\\n\\r\\n\\r\\n## Horizontal Rules\\r\\n\\r\\n___\\r\\n\\r\\n---\\r\\n\\r\\n***\\r\\n\\r\\n\\r\\n## Typographic replacements\\r\\n\\r\\nEnable typographer option to see result.\\r\\n\\r\\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\\r\\n\\r\\ntest.. test... test..... test?..... test!....\\r\\n\\r\\n!!!!!! ???? ,,  -- ---\\r\\n\\r\\n\\\"Smartypants, double quotes\\\" and \\'single quotes\\'\\r\\n\\r\\n\\r\\n## Emphasis\\r\\n\\r\\n**This is bold text**\\r\\n\\r\\n__This is bold text__\\r\\n\\r\\n*This is italic text*\\r\\n\\r\\n_This is italic text_\\r\\n\\r\\n~~Strikethrough~~\\r\\n\\r\\n\\r\\n## Blockquotes\\r\\n\\r\\n\\r\\n> Blockquotes can also be nested...\\r\\n>> ...by using additional greater-than signs right next to each other...\\r\\n> > > ...or with spaces between arrows.\\r\\n\\r\\n\\r\\n## Lists\\r\\n\\r\\nUnordered\\r\\n\\r\\n+ Create a list by starting a line with `+`, `-`, or `*`\\r\\n+ Sub-lists are made by indenting 2 spaces:\\r\\n  - Marker character change forces new list start:\\r\\n    * Ac tristique libero volutpat at\\r\\n    + Facilisis in pretium nisl aliquet\\r\\n    - Nulla volutpat aliquam velit\\r\\n+ Very easy!\\r\\n\\r\\nOrdered\\r\\n\\r\\n1. Lorem ipsum dolor sit amet\\r\\n2. Consectetur adipiscing elit\\r\\n3. Integer molestie lorem at massa\\r\\n\\r\\n\\r\\n1. You can use sequential numbers...\\r\\n1. ...or keep all the numbers as `1.`\\r\\n\\r\\nStart numbering with offset:\\r\\n\\r\\n57. foo\\r\\n1. bar\\r\\n\\r\\n\\r\\n## Code\\r\\n\\r\\nInline `code`\\r\\n\\r\\nIndented code\\r\\n\\r\\n    \\/\\/ Some comments\\r\\n    line 1 of code\\r\\n    line 2 of code\\r\\n    line 3 of code\\r\\n\\r\\n\\r\\nBlock code \\\"fences\\\"\\r\\n\\r\\n```\\r\\nSample text here...\\r\\n```\\r\\n\\r\\nSyntax highlighting\\r\\n\\r\\n``` js\\r\\nvar foo = function (bar) {\\r\\n  return bar++;\\r\\n};\\r\\n\\r\\nconsole.log(foo(5));\\r\\n```\\r\\n\\r\\n## Tables\\r\\n\\r\\n| Option | Description |\\r\\n| ------ | ----------- |\\r\\n| data   | path to data files to supply the data that will be passed into templates. |\\r\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\r\\n| ext    | extension to be used for dest files. |\\r\\n\\r\\nRight aligned columns\\r\\n\\r\\n| Option | Description |\\r\\n| ------:| -----------:|\\r\\n| data   | path to data files to supply the data that will be passed into templates. |\\r\\n| engine | engine to be used for processing templates. Handlebars is the default. |\\r\\n| ext    | extension to be used for dest files. |\\r\\n\\r\\n\\r\\n## Links\\r\\n\\r\\n[link text](http:\\/\\/dev.nodeca.com)\\r\\n\\r\\n[link with title](http:\\/\\/nodeca.github.io\\/pica\\/demo\\/ \\\"title text!\\\")\\r\\n\\r\\nAutoconverted link https:\\/\\/github.com\\/nodeca\\/pica (enable linkify to see)\\r\\n\\r\\n\\r\\n## Images\\r\\n\\r\\n![Minion](https:\\/\\/octodex.github.com\\/images\\/minion.png)\\r\\n![Stormtroopocat](https:\\/\\/octodex.github.com\\/images\\/stormtroopocat.jpg \\\"The Stormtroopocat\\\")\\r\\n\\r\\nLike links, Images also have a footnote style syntax\\r\\n\\r\\n![Alt text][id]\\r\\n\\r\\nWith a reference later in the document defining the URL location:\\r\\n\\r\\n[id]: https:\\/\\/octodex.github.com\\/images\\/dojocat.jpg  \\\"The Dojocat\\\"\\r\\n\\r\\n\\r\\n## Plugins\\r\\n\\r\\nThe killer feature of `markdown-it` is very effective support of\\r\\n[syntax plugins](https:\\/\\/www.npmjs.org\\/browse\\/keyword\\/markdown-it-plugin).\\r\\n\\r\\n\\r\\n### [Emojies](https:\\/\\/github.com\\/markdown-it\\/markdown-it-emoji)\\r\\n\\r\\n> Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:\\r\\n>\\r\\n> Shortcuts (emoticons): :-) :-( 8-) ;)\\r\\n\\r\\nsee [how to change output](https:\\/\\/github.com\\/markdown-it\\/markdown-it-emoji#change-output) with twemoji.\\r\\n\\r\\n\\r\\n### [Subscript](https:\\/\\/github.com\\/markdown-it\\/markdown-it-sub) \\/ [Superscript](https:\\/\\/github.com\\/markdown-it\\/markdown-it-sup)\\r\\n\\r\\n- 19^th^\\r\\n- H~2~O\\r\\n\\r\\n\\r\\n### [\\\\<ins>](https:\\/\\/github.com\\/markdown-it\\/markdown-it-ins)\\r\\n\\r\\n++Inserted text++\\r\\n\\r\\n\\r\\n### [\\\\<mark>](https:\\/\\/github.com\\/markdown-it\\/markdown-it-mark)\\r\\n\\r\\n==Marked text==\\r\\n\\r\\n\\r\\n### [Footnotes](https:\\/\\/github.com\\/markdown-it\\/markdown-it-footnote)\\r\\n\\r\\nFootnote 1 link[^first].\\r\\n\\r\\nFootnote 2 link[^second].\\r\\n\\r\\nInline footnote^[Text of inline footnote] definition.\\r\\n\\r\\nDuplicated footnote reference[^second].\\r\\n\\r\\n[^first]: Footnote **can have markup**\\r\\n\\r\\n    and multiple paragraphs.\\r\\n\\r\\n[^second]: Footnote text.\\r\\n\\r\\n\\r\\n### [Definition lists](https:\\/\\/github.com\\/markdown-it\\/markdown-it-deflist)\\r\\n\\r\\nTerm 1\\r\\n\\r\\n:   Definition 1\\r\\nwith lazy continuation.\\r\\n\\r\\nTerm 2 with *inline markup*\\r\\n\\r\\n:   Definition 2\\r\\n\\r\\n        { some code, part of Definition 2 }\\r\\n\\r\\n    Third paragraph of definition 2.\\r\\n\\r\\n_Compact style:_\\r\\n\\r\\nTerm 1\\r\\n  ~ Definition 1\\r\\n\\r\\nTerm 2\\r\\n  ~ Definition 2a\\r\\n  ~ Definition 2b\\r\\n\\r\\n\\r\\n### [Abbreviations](https:\\/\\/github.com\\/markdown-it\\/markdown-it-abbr)\\r\\n\\r\\nThis is HTML abbreviation example.\\r\\n\\r\\nIt converts \\\"HTML\\\", but keep intact partial entries like \\\"xxxHTMLyyy\\\" and so on.\\r\\n\\r\\n*[HTML]: Hyper Text Markup Language\\r\\n\\r\\n### [Custom containers](https:\\/\\/github.com\\/markdown-it\\/markdown-it-container)\\r\\n\\r\\n::: warning\\r\\n*here be dragons*\\r\\n:::\\r\\n\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: demo,\n      result: md.render(demo),\n      min: false,\n      menu: false,\n      modal: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleMinimize = this.handleMinimize.bind(this);\n    this.handleMenu = this.handleMenu.bind(this);\n    this.handlePDF = this.handlePDF.bind(this);\n  }\n\n  handleChange(e) {\n    let r = md.render(e.target.value)\n    this.setState({\n      [e.target.name]: e.target.value,\n      result: r\n    })\n  }\n\n  handleReset() {\n    this.setState({\n      input: '',\n      result: ''\n    })\n  }\n\n  handleMinimize() {\n    if (this.state.min) {\n      this.setState({\n        min: false\n      })\n    } else {\n      this.setState({\n        min: true\n      })\n    }\n  }\n\n  handleMenu() {\n    if (this.state.menu) {\n      this.setState({\n        menu: false\n      })\n    } else {\n      this.setState({\n        menu: true\n      })\n    }\n  }\n\n  handlePDF(e) {\n    html2pdf(this.state.result)\n  }\n\nrender() {\n  return (\n      <div className=\"App\">\n        <h3 id=\"welcome\">Welcome to</h3>\n        <h1 id=\"title\">Markdown<span id=\"thin\">98</span></h1>\n        <p id=\"blurb\">\n          A quick and easy Markdown Editor. To clear the input box entirely, click the 'X' icon\n          on the window bar. Want to just view your glorious, new Markdown? Try clicking on the\n          minimize button. If you want to take your beautiful new Markdown with you, click the Restore\n          button in the output to download it as a PDF.\n        </p>\n        <ScrollSync>\n        <container>\n          <div className=\"input window\" style={{display: this.state.min ? \"none\" : \"block\"}}>\n            <div className=\"title-bar\">\n              <p className=\"title-bar-text\">Write your boring, plain-text here</p>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Minimize\" onClick={this.handleMinimize}></button>\n                <button aria-label=\"Close\" onClick={this.handleReset}></button>\n              </div>\n            </div>\n              <div className=\"inputText\">\n                <ScrollSyncPane>\n                  <textarea name=\"input\" id=\"editor\" value={this.state.input} onChange={this.handleChange} autoFocus></textarea>\n                </ScrollSyncPane>\n              </div>\n          </div>\n          <div className=\"output window\" style={{margin: this.state.min ? \"auto\" : \"auto\"}}>\n            <div className=\"title-bar\">\n              <p className=\"title-bar-text\">Get your sweet, sweet, Markdown here:</p>\n              <div className=\"title-bar-controls\">\n                <button aria-label=\"Restore\" id=\"openPDF\" onClick={this.handlePDF}></button>\n              </div>\n            </div>\n            <ScrollSyncPane>\n              <div className=\"result\" dangerouslySetInnerHTML={{__html: this.state.result}}></div>\n            </ScrollSyncPane>\n          </div>\n        </container>\n      </ScrollSync>\n        <footer>\n          <img id=\"more\" onClick={this.handleMenu} src=\"https://cdn.vox-cdn.com/thumbor/sVV5FY43ITVX6M5r61MBrnnQSdI=/cdn.vox-cdn.com/uploads/chorus_asset/file/6028879/win95s.0.gif\"></img>\n          {this.state.min ?\n            <button id=\"inputMin\" onClick={this.handleMinimize}>Input Box</button>\n            :\n            ''\n          }\n        </footer>\n        <div className='menu window' style={{display: this.state.menu ? \"block\" : \"none\"}}>\n          <h4>About:</h4>\n          <hr></hr>\n          <p>\n            Thanks for visiting! This markdown editor was coded by Aidan Bell; Full-Stack\n            Developer, Javascript Wizard, and Real Fun guy. Have a peek into what I've been\n            working on:\n          </p>\n          <ul id=\"links\">\n            <a href=\"https://github.com/aidanbell\"><li>Github</li></a>\n            <a href=\"https://www.linkedin.com/in/aidanbell0/\"><li>LinkedIn</li></a>\n            <a href=\"https://aidanb.io/\"><li>Personal Site</li></a>\n          </ul>\n          <h4>Coming Soon</h4>\n          <hr></hr>\n          <ul id=\"icebox\">\n            <li>Confirmation on PDF Download with option to name the file</li>\n            <li>Animation to show the Input section minimizing</li>\n            <li>Some more styling options</li>\n            <li>A cheesey Windows 98-like logo</li>\n          </ul>\n        </div>\n      <div className=\"PDFModal window\" style={{display: this.state.modal ? \"none\" : \"block\"}}>\n\n      </div>\n    </div>\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}